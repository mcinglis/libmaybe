
// This file is the result of running:
//     {{' '.join(argv)}}


// Copyright 2015  Malcolm Inglis <http://minglis.id.au>
//
// This file is part of Libmaybe.
//
// Libmaybe is free software: you can redistribute it and/or modify it under
// the terms of the GNU Affero General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// Libmaybe is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for
// more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with Libmaybe. If not, see <https://gnu.org/licenses/>.


{% set sys_headers = sys_headers.split() %}
{% set rel_headers = rel_headers.split() %}
{% set typeclasses = typeclasses.split() %}


#ifndef {{include_guard}}
#define {{include_guard}}


{% for path in sys_headers %}
#include <{{path}}>
{% endfor %}

{% for path in rel_headers %}
#include "{{path}}"
{% endfor %}


Maybe_{{typename}}
maybe_{{funcname}}__nothing(
        void );


Maybe_{{typename}}
maybe_{{funcname}}__nothing_v(
        {{type}} );


Maybe_{{typename}}
maybe_{{funcname}}__value(
        {{type}} );


bool
maybe_{{funcname}}__is_nothing(
        Maybe_{{typename}} );


bool
maybe_{{funcname}}__is_value(
        Maybe_{{typename}} );


{{type}}
maybe_{{funcname}}__value_or(
        Maybe_{{typename}},
        {{type}} or );



{% macro typeclass_header(name) -%}
///////////////////////////////////
/// TYPECLASS: {{name}}
///////////////////////////////////
{%- endmacro %}

{% macro typeclass(name) -%}
{% if name in typeclasses %}
{{ typeclass_header(name) }}
{{ caller() }}
{% endif %}
{%- endmacro %}


{% call typeclass('EQ') %}

bool
maybe_{{funcname}}__equal(
        Maybe_{{typename}},
        Maybe_{{typename}} );


bool
maybe_{{funcname}}__not_equal(
        Maybe_{{typename}},
        Maybe_{{typename}} );

{% endcall %}


#endif // ifndef {{ include_guard }}

